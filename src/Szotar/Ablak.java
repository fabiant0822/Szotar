package Szotar;

import java.awt.event.KeyEvent;

/**
 *
 * @author Fabian Tamas 1.0
 */
public class Ablak extends javax.swing.JFrame {
    
    DB ab;

    public Ablak() {
        initComponents();
        ab = new DB();
        ab.beolvas(tblSzavak, lekerdez());
    }
   
    private String lekerdez() {
        String q = "";
        if (!txtLeckeSzur.getText().trim().isEmpty())
            q = q + " lecke LIKE '%" + txtLeckeSzur.getText().trim() + "%' AND";
        q = q + " angol LIKE '%" + txtAngolSzur.getText().trim() + "%' AND";
        q = q + " magyar LIKE '%" + txtMagyarSzur.getText().trim() + "%' ";
        return "SELECT * FROM szavak WHERE " + q + " ORDER BY lecke;";
    }
    
    private void tablabol() {
        int i = tblSzavak.getSelectedRow();
        if (i == -1) return;
        Object e = tblSzavak.getValueAt(i, 1);
        if (e != null)
            txtLecke.setText(e.toString());
        else 
            txtLecke.setText("");
        txtAngol.setText(tblSzavak.getValueAt(i, 2).toString());
        txtMagyar.setText(tblSzavak.getValueAt(i, 3).toString());
    }
    
    private void uj_kijelol() {
        int sordb = tblSzavak.getRowCount();
        int max = 0;
        int sor = 0;
        for (int i = 0; i < sordb; i++) {
            int n = Integer.parseInt(tblSzavak.getValueAt(i, 0).toString());
            if (n > max) {
                max = n;
                sor = i;
            }
        }
        tblSzavak.setRowSelectionInterval(sor, sor);
        tablabol();
    }
    
   private void kijelol(int szoid) {
        int sordb = tblSzavak.getRowCount();
        for (int i = 0; i < sordb; i++) {
            int id = Integer.parseInt(tblSzavak.getValueAt(i, 0).toString());
            if (id == szoid) {
                tblSzavak.setRowSelectionInterval(i, i);
                tablabol();
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtLeckeSzur = new javax.swing.JTextField();
        txtAngolSzur = new javax.swing.JTextField();
        txtMagyarSzur = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSzavak = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtLecke = new javax.swing.JTextField();
        txtAngol = new javax.swing.JTextField();
        txtMagyar = new javax.swing.JTextField();
        btnTorol = new javax.swing.JButton();
        btnSzurok = new javax.swing.JButton();
        btnHozzaad = new javax.swing.JButton();
        btnModosit = new javax.swing.JButton();
        btnUj = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Szótárfüzet");
        setResizable(false);

        txtLeckeSzur.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtLeckeSzur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLeckeSzurActionPerformed(evt);
            }
        });

        txtAngolSzur.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtAngolSzur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAngolSzurActionPerformed(evt);
            }
        });

        txtMagyarSzur.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtMagyarSzur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMagyarSzurActionPerformed(evt);
            }
        });

        tblSzavak.setAutoCreateRowSorter(true);
        tblSzavak.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Lecke", "Angol", "Magyar"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSzavak.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblSzavak.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblSzavakMouseReleased(evt);
            }
        });
        tblSzavak.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblSzavakKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblSzavak);
        if (tblSzavak.getColumnModel().getColumnCount() > 0) {
            tblSzavak.getColumnModel().getColumn(0).setMinWidth(0);
            tblSzavak.getColumnModel().getColumn(0).setMaxWidth(0);
            tblSzavak.getColumnModel().getColumn(1).setPreferredWidth(100);
            tblSzavak.getColumnModel().getColumn(2).setPreferredWidth(300);
            tblSzavak.getColumnModel().getColumn(3).setPreferredWidth(300);
        }

        jLabel1.setDisplayedMnemonic('m');
        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setLabelFor(txtMagyar);
        jLabel1.setText("Magyar:");

        jLabel2.setDisplayedMnemonic('a');
        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setLabelFor(txtAngol);
        jLabel2.setText("Angol:");

        jLabel3.setDisplayedMnemonic('l');
        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setLabelFor(txtLecke);
        jLabel3.setText("Lecke:");

        txtLecke.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        txtAngol.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        txtMagyar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        btnTorol.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnTorol.setMnemonic('t');
        btnTorol.setText("Töröl");
        btnTorol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTorolActionPerformed(evt);
            }
        });

        btnSzurok.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnSzurok.setMnemonic('s');
        btnSzurok.setText("Szűrőket törli");
        btnSzurok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSzurokActionPerformed(evt);
            }
        });

        btnHozzaad.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnHozzaad.setMnemonic('h');
        btnHozzaad.setText("Hozzáad");
        btnHozzaad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHozzaadActionPerformed(evt);
            }
        });

        btnModosit.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnModosit.setMnemonic('d');
        btnModosit.setText("Módosít");
        btnModosit.setActionCommand("Módosít");
        btnModosit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModositActionPerformed(evt);
            }
        });

        btnUj.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnUj.setMnemonic('j');
        btnUj.setText("Új");
        btnUj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUjActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtLeckeSzur, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtAngolSzur)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMagyarSzur, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtLecke, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(txtMagyar)
                            .addComponent(txtAngol))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnHozzaad, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)
                            .addComponent(btnModosit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnUj, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnTorol, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSzurok, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLeckeSzur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAngolSzur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMagyarSzur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 348, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtLecke, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtAngol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMagyar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnTorol)
                            .addComponent(btnHozzaad))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSzurok)
                            .addComponent(btnModosit))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUj)
                        .addGap(1, 1, 1)))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtLeckeSzurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLeckeSzurActionPerformed
        ab.beolvas(tblSzavak, lekerdez());
    }//GEN-LAST:event_txtLeckeSzurActionPerformed

    private void txtAngolSzurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAngolSzurActionPerformed
        ab.beolvas(tblSzavak, lekerdez());
    }//GEN-LAST:event_txtAngolSzurActionPerformed

    private void txtMagyarSzurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMagyarSzurActionPerformed
        ab.beolvas(tblSzavak, lekerdez());
    }//GEN-LAST:event_txtMagyarSzurActionPerformed

    private void btnSzurokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSzurokActionPerformed
        txtLeckeSzur.setText("");
        txtAngolSzur.setText("");
        txtMagyarSzur.setText("");
        ab.beolvas(tblSzavak, lekerdez());
    }//GEN-LAST:event_btnSzurokActionPerformed

    private void tblSzavakMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSzavakMouseReleased
        tablabol();
    }//GEN-LAST:event_tblSzavakMouseReleased

    private void tblSzavakKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblSzavakKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_UP
                || evt.getKeyCode() == KeyEvent.VK_DOWN
                || evt.getKeyCode() == KeyEvent.VK_PAGE_UP
                || evt.getKeyCode() == KeyEvent.VK_PAGE_DOWN)
            tablabol();
    }//GEN-LAST:event_tblSzavakKeyReleased

    private void btnUjActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUjActionPerformed
        txtAngol.setText("");
        txtMagyar.setText("");
        txtLecke.requestFocus();
        txtLecke.selectAll();
    }//GEN-LAST:event_btnUjActionPerformed

    private void btnHozzaadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHozzaadActionPerformed
        int n = ab.hozzaad(txtLecke.getText(), txtAngol.getText(), txtMagyar.getText());
        if (n > 0) {
        ab.beolvas(tblSzavak, lekerdez());
        uj_kijelol();
        txtAngol.requestFocus();
        txtAngol.selectAll();
        }
    }//GEN-LAST:event_btnHozzaadActionPerformed

    private void btnModositActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModositActionPerformed
        int m = tblSzavak.getSelectedRow();
        if (m == -1) return;
        int szoid = Integer.parseInt(tblSzavak.getValueAt(m, 0).toString());
        int n = ab.modosit(szoid, txtLecke.getText(), txtAngol.getText(), txtMagyar.getText());
        if (n > 0) {
        ab.beolvas(tblSzavak, lekerdez());
        kijelol(szoid);
        }
    }//GEN-LAST:event_btnModositActionPerformed

    private void btnTorolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTorolActionPerformed
        int i = tblSzavak.getSelectedRow();
        if (i == -1) return;
        ab.torol(Integer.parseInt(tblSzavak.getValueAt(i, 0).toString()));
        ab.beolvas(tblSzavak, lekerdez());
    }//GEN-LAST:event_btnTorolActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ablak.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ablak.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ablak.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ablak.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Ablak().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHozzaad;
    private javax.swing.JButton btnModosit;
    private javax.swing.JButton btnSzurok;
    private javax.swing.JButton btnTorol;
    private javax.swing.JButton btnUj;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblSzavak;
    private javax.swing.JTextField txtAngol;
    private javax.swing.JTextField txtAngolSzur;
    private javax.swing.JTextField txtLecke;
    private javax.swing.JTextField txtLeckeSzur;
    private javax.swing.JTextField txtMagyar;
    private javax.swing.JTextField txtMagyarSzur;
    // End of variables declaration//GEN-END:variables
}
